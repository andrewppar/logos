(ns clj.logos.proof.premise
  (:require [logos.formula :as formula]
            [logos.proof.proof :as proof]))

(defn add-premise
  [proof formula]
  (let [problem-index (get proof ::problems)
        current-problem-idx (get proof ::current-problem)
        current-problem (get problem-index current-problem-idx)
        premise         (proof/new-premise formula)
        new-idx         (inc (apply max (keys (get proof ::premises))))
        new-problem     (update current-problem
                                ::premises (fn [x] (conj x new-idx)))
        new-premise-index (assoc (get proof ::premises) new-idx premise)
        new-problem-index (assoc problem-index
                                 current-problem-idx new-problem)]
    (assoc proof
           ::premises new-premise-index
           ::problems new-problem-index)))
